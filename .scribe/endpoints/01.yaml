name: Products
description: |-

  APIs for managing products
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Products'
      description: 'This endpoint allows you to get all products.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
          "id": 1,
          "productName": "Shirt",
          "productPrice": "$600",
          "discountedPrice": "$540",
          "discount": "$60"
          },
          {
          "id": 2,
          "productName": "Bag",
          "productPrice": "$400",
          "discountedPrice": "$360",
          "discount": "$40"
            }
          ]
        headers: []
        description: 'Get All Products'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e4D56PgvV1Z6f3ckbdEh8aa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Add Product'
      description: 'This endpoint allows you to add a product.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The user_id for the User of product.'
        required: true
        example: '3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: Bag
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 200
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the user.'
        required: true
        example: 'Blue Bag'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      user_id: '3'
      name: Bag
      price: 200
      description: 'Blue Bag'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "productName": "Bag",
            "productPrice": "$400",
            "discountedPrice": "$360",
            "discount": "$40"
           }
        headers: []
        description: 'Add a Product'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kP4h6EacVvb5aedg83fD16Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Product'
      description: 'This endpoint allows you to get a product.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 2,
          "productName": "Bag",
          "productPrice": "$400",
          "discountedPrice": "$360",
          "discount": "$40"
          }
        headers: []
        description: 'Get a Product'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g8e6ackEb63Vd15fPZDha4v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Product'
      description: 'This endpoint allows you to update a product.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: Shirt
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 600
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the user.'
        required: true
        example: White
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      user_id:
        name: user_id
        description: 'The user_id for the User of product.'
        required: false
        example: '3'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: Shirt
      price: 600
      description: White
      user_id: '3'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "productName": "Shirt",
            "productPrice": "$600",
            "discountedPrice": "$540",
            "discount": "$60"
           }
        headers: []
        description: 'Update a Product'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Va68ehDEZgb4fk1Pva5dc63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product'
      description: 'This endpoint allows you to delete a product.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: 'Delete a Product'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e5dg8Eck416V6afa3bDhPZv'
    controller: null
    method: null
    route: null
    custom: []
