name: Authentication
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register User'
      description: 'This Api is used to register a user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: Admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: admin@admin.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: test1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The password of the user.'
        required: true
        example: test1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: Admin
      email: admin@admin.com
      password: test1234
      confirm_password: test1234
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
                    "message": "User was successfully registered","token":
                    "1|w21Al97p6mBb9bbyblCEUqgEzXaFzAdbwAEGoYvg1c454909"
                 }
        headers: []
        description: 'Registering a user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Login User'
      description: 'This Api is used to login a user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: admin@admin.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: test1234
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: admin@admin.com
      password: test1234
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "message": "Login was successful",
                "user": { "id": 1,
                          "name": "Admin",
                          "email": "admin@admin.com",
                          "products": []
                        },
                "token": "2|VjVtD7L4S50TKzSycnSq1YFj6NQWW6QbNPZ1dssz85c6ee28"
            }
        headers: []
        description: 'Login a user'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout User'
      description: 'This Api is used to logout a user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "message":"User logged out successfully" }'
        headers: []
        description: 'Logout User'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gEZa5edfbVk6hP48Da6cv13'
    controller: null
    method: null
    route: null
    custom: []
